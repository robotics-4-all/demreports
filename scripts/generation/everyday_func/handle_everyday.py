from docx.enum.text import WD_PARAGRAPH_ALIGNMENT
from docx.shared import RGBColor

from generation.tests_literals.fucas_literals import fucas_literals

def handle_everyday_functionality(parsed, document, literals, print_output = False):
    p1 = document.add_paragraph()

    printable_1 = f"Από τα αποτελέσματα της αντικειμενικής εκτίμησης μέσω της δοκιμασίας καθημερινής λειτουργικότητας (FUCAS) διαπιστώθηκαν ελλείψεις σε σύνθετες δραστηριότητες που αφορούσαν τομείς που σχετίζονταν με την λήψη της φαρμακευτικής αγωγής, στην ικανότητα επικοινωνίας με την χρήση τηλεφωνικού καταλόγου, στην ικανότητα οικονομικών συναλλαγών. Η ικανότητα προσανατολισμού σε χώρο ήταν ελαφρώς μειωμένη, ενώ οι πιο απλές όπως αυτές της ένδυσης, αλλά και διατήρησης της προσωπικής υγιεινής δεν παρουσίασαν έκπτωση που να αποκλίνει από το φυσιολογικό επίπεδο.\n"

    p1.add_run(printable_1)
    p1.runs[0].font.color.rgb = RGBColor(255, 0, 0)
    if print_output:
        print(printable_1)

    printable_2 = f"Σύμφωνα με την συνέντευξη που πραγματοποιήθηκε με {literals['att_literal_1']} ({literals['att_names_with_relations']}) και μετά από την χορήγηση ημι-δομημένου ερωτηματολογίου (FRSSD), αναφέρθηκαν ήπιες δυσκολίες σε ικανότητες ένδυσης, στην ομιλία (εύρεση κατάλληλης λέξης), στον ύπνο, στην αναγνώριση προσώπων, στην διατήρηση της ατομικής υγιεινής, στην μνήμη ονομάτων, στον προσανατολισμό σε τόπο, στην συναισθηματική κατάσταση, καθώς και στην κοινωνική απαντητικότητα. Μεγαλύτερες ήταν οι δυσκολίες σύμφωνα με τους συνοδούς, σε ικανότητες μνήμης γεγονότων και εγρήγορσης/προσοχής, ενώ σοβαρές αλλαγές αναφέρθηκαν από τους συνοδούς στην σφαιρική σύγχυση. Τα παραπάνω ευρήματα συνηγορούν στο ότι για το χρονικό διάστημα στο οποίο αναφέρεται η νευροψυχολογική εκτίμηση, {literals['full_with_article']} χρειαζόταν υπενθύμιση, βοήθεια και στήριξη μέσω τρίτων προσώπων προκειμένου να μπορεί να ανταπεξέλθει στις σύνθετες αλλά και στις πιο απλές δραστηριότητες της καθημερινής ζωής." 
    p1.add_run(printable_2)
    p1.runs[1].font.color.rgb = RGBColor(255, 0, 0)

    if print_output:
        print(printable_2)

    p1.alignment = WD_PARAGRAPH_ALIGNMENT.JUSTIFY